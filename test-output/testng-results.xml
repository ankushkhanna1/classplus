<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Shutdown the Web Application]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="26046" started-at="2019-04-27T22:59:03Z" finished-at="2019-04-27T22:59:29Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="26046" started-at="2019-04-27T22:59:03Z" finished-at="2019-04-27T22:59:29Z">
      <class name="tests.FlowMapper">
        <test-method status="PASS" signature="generateIniFile()[pri:0, instance:tests.FlowMapper@754ba872]" name="generateIniFile" is-config="true" duration-ms="20" started-at="2019-04-28T04:29:03Z" finished-at="2019-04-28T04:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateIniFile -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="2339" started-at="2019-04-28T04:29:04Z" data-provider="getData" finished-at="2019-04-28T04:29:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=, STEP10=, PRIORITY=P, STEP02=, STEP13=, TCID=FlowMapper_000, STEP03=, STEP11=, STEP01=EnvTest_QA2, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Set environment to run test cases on, TESTTYPE=no-check, STEP08=, STEP09=, FEATURE=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="160" started-at="2019-04-28T04:29:06Z" finished-at="2019-04-28T04:29:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="FAIL" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="20687" started-at="2019-04-28T04:29:07Z" data-provider="getData" finished-at="2019-04-28T04:29:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_021, STEP13=, TCID=FlowMapper_031, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=New Remitter -> New Beneficiary -> Bene Validation -> Bene Addition during Money Transfer, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at in.novopay.platform_ui.pages.web.RBLMoneyTransferPage.rblMoneyTransfer(RBLMoneyTransferPage.java:731)
	at tests.ui.RBLMoneyTransferTest.rBLMoneyTransferTest(RBLMoneyTransferTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at tests.FlowMapper.flowMapperTest(FlowMapper.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="914" started-at="2019-04-28T04:29:27Z" finished-at="2019-04-28T04:29:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=FAILURE method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="killDriver()[pri:0, instance:tests.FlowMapper@754ba872]" name="killDriver" is-config="true" duration-ms="619" started-at="2019-04-28T04:29:28Z" finished-at="2019-04-28T04:29:29Z">
          <reporter-output>
            <line>
              <![CDATA[Shutdown the Web Application]]>
            </line>
          </reporter-output>
        </test-method> <!-- killDriver -->
      </class> <!-- tests.FlowMapper -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>

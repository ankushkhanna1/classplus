<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="26" passed="24">
  <reporter-output>
    <line>
      <![CDATA[Connecting server...]]>
    </line>
    <line>
      <![CDATA[Shutdown the Web Application]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="1175710" started-at="2019-04-23T11:42:24Z" finished-at="2019-04-23T12:02:00Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1175710" started-at="2019-04-23T11:42:24Z" finished-at="2019-04-23T12:02:00Z">
      <class name="tests.FlowMapper">
        <test-method status="PASS" signature="generateIniFile()[pri:0, instance:tests.FlowMapper@754ba872]" name="generateIniFile" is-config="true" duration-ms="22" started-at="2019-04-23T17:12:24Z" finished-at="2019-04-23T17:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateIniFile -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="2807" started-at="2019-04-23T17:12:26Z" data-provider="getData" finished-at="2019-04-23T17:12:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=, STEP10=, PRIORITY=P, STEP02=, STEP13=, TCID=FlowMapper_000, STEP03=, STEP11=, STEP01=EnvTest_QA2, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Set environment to run test cases on, TESTTYPE=no-check, STEP08=, STEP09=, FEATURE=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="177" started-at="2019-04-23T17:12:29Z" finished-at="2019-04-23T17:12:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="61476" started-at="2019-04-23T17:12:29Z" data-provider="getData" finished-at="2019-04-23T17:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_021, STEP13=, TCID=FlowMapper_031, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=New Remitter -> New Beneficiary -> Bene Validation -> Bene Addition during Money Transfer, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="22" started-at="2019-04-23T17:13:30Z" finished-at="2019-04-23T17:13:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="62204" started-at="2019-04-23T17:13:30Z" data-provider="getData" finished-at="2019-04-23T17:14:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_001, STEP13=, TCID=FlowMapper_033, STEP03=RBLMoneyTransferTest_023, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Existing Remitter -> New Beneficiary -> Bene Validation -> Bene Addition during Money Transfer, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="22" started-at="2019-04-23T17:14:33Z" finished-at="2019-04-23T17:14:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="84908" started-at="2019-04-23T17:14:33Z" data-provider="getData" finished-at="2019-04-23T17:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_001, STEP13=, TCID=FlowMapper_035, STEP03=RBLMoneyTransferTest_024, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=RBLMoneyTransferTest_025, STEP05=LogoutTest_001, RUNMODE=Yes, DESCRIPTION=Existing Remitter -> Existing Validated Active Beneficiary -> Money Transfer, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="16" started-at="2019-04-23T17:15:57Z" finished-at="2019-04-23T17:15:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="28334" started-at="2019-04-23T17:15:57Z" data-provider="getData" finished-at="2019-04-23T17:16:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_029, STEP13=, TCID=FlowMapper_047, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Hard Delete New Bene, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="14" started-at="2019-04-23T17:16:26Z" finished-at="2019-04-23T17:16:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="25281" started-at="2019-04-23T17:16:26Z" data-provider="getData" finished-at="2019-04-23T17:16:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_031, STEP13=, TCID=FlowMapper_049, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Advice of Charges, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="18" started-at="2019-04-23T17:16:51Z" finished-at="2019-04-23T17:16:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="34369" started-at="2019-04-23T17:16:51Z" data-provider="getData" finished-at="2019-04-23T17:17:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_034, STEP13=, TCID=FlowMapper_051, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Do remittance such that the transaction gets failed, TESTTYPE=Negative, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="15" started-at="2019-04-23T17:17:25Z" finished-at="2019-04-23T17:17:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="56729" started-at="2019-04-23T17:17:26Z" data-provider="getData" finished-at="2019-04-23T17:18:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_036, STEP13=, TCID=FlowMapper_053, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Multiple Success, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="76" started-at="2019-04-23T17:18:22Z" finished-at="2019-04-23T17:18:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="49186" started-at="2019-04-23T17:18:22Z" data-provider="getData" finished-at="2019-04-23T17:19:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_004, STEP13=, TCID=FlowMapper_059, STEP03=RBLMoneyTransferTest_044, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Check limit after success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="12" started-at="2019-04-23T17:19:11Z" finished-at="2019-04-23T17:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="42159" started-at="2019-04-23T17:19:12Z" data-provider="getData" finished-at="2019-04-23T17:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_094, STEP13=, TCID=FlowMapper_093, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, DESCRIPTION=Print Receipt in Success screen, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="13" started-at="2019-04-23T17:19:54Z" finished-at="2019-04-23T17:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="56447" started-at="2019-04-23T17:19:54Z" data-provider="getData" finished-at="2019-04-23T17:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_005, STEP13=, TCID=FlowMapper_095, STEP03=LogoutTest_001, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=LogoutTest_001, STEP07=, STEP04=LoginTest_001, STEP05=RBLMoneyTransferTest_080, RUNMODE=Yes, DESCRIPTION=Verify FCM for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="12" started-at="2019-04-23T17:20:50Z" finished-at="2019-04-23T17:20:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="98923" started-at="2019-04-23T17:20:50Z" data-provider="getData" finished-at="2019-04-23T17:22:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_032, STEP13=, TCID=FlowMapper_101, STEP03=RBLMoneyTransferTest_089, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=RBLMoneyTransferTest_089, STEP05=LogoutTest_001, RUNMODE=Yes, DESCRIPTION=Verify SMS for queued transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="18" started-at="2019-04-23T17:22:29Z" finished-at="2019-04-23T17:22:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="FAIL" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="52402" started-at="2019-04-23T17:22:29Z" data-provider="getData" finished-at="2019-04-23T17:23:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_038, STEP13=, TCID=FlowMapper_122, STEP03=RBLStatusEnquiryTest_005, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=RBLMoneyTransferTest_098, STEP07=RBLStatusEnquiryTest_016, STEP04=LogoutTest_001, STEP05=LoginTest_001, RUNMODE=Yes, DESCRIPTION=FCM on success refund, TESTTYPE=Positive, STEP08=LogoutTest_001, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [23 Apr 2019, 05:23:04 PM] but found [23 Apr 2019, 05:23:04 pm]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [23 Apr 2019, 05:23:04 PM] but found [23 Apr 2019, 05:23:04 pm]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at in.novopay.platform_ui.pages.web.RBLStatusEnquiryPage.reportsData(RBLStatusEnquiryPage.java:458)
	at in.novopay.platform_ui.pages.web.RBLStatusEnquiryPage.rBLStatusEnquiry(RBLStatusEnquiryPage.java:246)
	at tests.ui.RBLStatusEnquiryTest.rBLStatusEnquiryTest(RBLStatusEnquiryTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at tests.FlowMapper.flowMapperTest(FlowMapper.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="387" started-at="2019-04-23T17:23:21Z" finished-at="2019-04-23T17:23:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=FAILURE method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="71974" started-at="2019-04-23T17:23:22Z" data-provider="getData" finished-at="2019-04-23T17:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_229, STEP03=RBLBankingTest_048, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Withdrawal - Verify SMS for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Banking}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="12" started-at="2019-04-23T17:24:34Z" finished-at="2019-04-23T17:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="54204" started-at="2019-04-23T17:24:34Z" data-provider="getData" finished-at="2019-04-23T17:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_241, STEP03=RBLBankingTest_060, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Balance Enquiry - Save as Print Receipt in Success screen, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Banking}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="16" started-at="2019-04-23T17:25:28Z" finished-at="2019-04-23T17:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="52753" started-at="2019-04-23T17:25:28Z" data-provider="getData" finished-at="2019-04-23T17:26:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_247, STEP03=RBLBankingTest_030, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=LoginTest_001, STEP07=RBLAEPSStatusEnquiryTest_014, STEP04=RBLAEPSStatusEnquiryTest_001, STEP05=LogoutTest_001, RUNMODE=Yes, DESCRIPTION=Withdrawal - FCM for status enquiry of successful transaction, TESTTYPE=Positive, STEP08=LogoutTest_001, STEP09=, FEATURE=Banking}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Connecting server...]]>
            </line>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="17" started-at="2019-04-23T17:26:21Z" finished-at="2019-04-23T17:26:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output=Connecting server...]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="31564" started-at="2019-04-23T17:26:21Z" data-provider="getData" finished-at="2019-04-23T17:26:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=YBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_267, STEP03=YBLBankingTest_048, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Withdrawal - Verify SMS for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Banking}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="12" started-at="2019-04-23T17:26:52Z" finished-at="2019-04-23T17:26:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="24814" started-at="2019-04-23T17:26:52Z" data-provider="getData" finished-at="2019-04-23T17:27:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=YBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_279, STEP03=YBLBankingTest_060, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Balance Enquiry - Save as Print Receipt in Success screen, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Banking}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="12" started-at="2019-04-23T17:27:17Z" finished-at="2019-04-23T17:27:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="27959" started-at="2019-04-23T17:27:17Z" data-provider="getData" finished-at="2019-04-23T17:27:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=ALL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_286, STEP03=CapitalFirstAgentTest_004, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Success transaction for HFC, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=CMS: CFA}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="16" started-at="2019-04-23T17:27:45Z" finished-at="2019-04-23T17:27:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="29062" started-at="2019-04-23T17:27:45Z" data-provider="getData" finished-at="2019-04-23T17:28:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=ALL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_292, STEP03=CapitalFirstAgentTest_010, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Verify SMS for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=CMS: CFA}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="18" started-at="2019-04-23T17:28:14Z" finished-at="2019-04-23T17:28:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="29080" started-at="2019-04-23T17:28:14Z" data-provider="getData" finished-at="2019-04-23T17:28:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=ALL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_304, STEP03=CapitalFirstConsumerTest_007, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Verify SMS for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=CMS: CFC}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="34" started-at="2019-04-23T17:28:43Z" finished-at="2019-04-23T17:28:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="29854" started-at="2019-04-23T17:28:43Z" data-provider="getData" finished-at="2019-04-23T17:29:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=ALL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_320, STEP03=SwiggyTest_010, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Verify SMS for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=CMS: Swiggy}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="151" started-at="2019-04-23T17:29:13Z" finished-at="2019-04-23T17:29:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="33272" started-at="2019-04-23T17:29:13Z" data-provider="getData" finished-at="2019-04-23T17:29:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=ALL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_337, STEP03=FullertonTest_012, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Verify SMS for success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=CMS: FT}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="39" started-at="2019-04-23T17:29:47Z" finished-at="2019-04-23T17:29:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="FAIL" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="55582" started-at="2019-04-23T17:29:47Z" data-provider="getData" finished-at="2019-04-23T17:30:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=RBL, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_005, STEP13=, TCID=FlowMapper_350, STEP03=ReportsTest_009, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=Account Statement - Money Transfer, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Reports: MT}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6.00] but found [6]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6.00] but found [6]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at in.novopay.platform_ui.pages.web.ReportsPage.reportsData(ReportsPage.java:251)
	at in.novopay.platform_ui.pages.web.ReportsPage.reports(ReportsPage.java:136)
	at tests.ui.ReportsTest.reportsTest(ReportsTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at tests.FlowMapper.flowMapperTest(FlowMapper.java:101)
	at sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="696" started-at="2019-04-23T17:30:42Z" finished-at="2019-04-23T17:30:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=FAILURE method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="26850" started-at="2019-04-23T17:30:43Z" data-provider="getData" finished-at="2019-04-23T17:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=-, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_372, STEP03=SettlementTest_016, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=, STEP07=, STEP04=LogoutTest_001, STEP05=, RUNMODE=Yes, DESCRIPTION=SMS when settlement done to Bank, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Settlement}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="18" started-at="2019-04-23T17:31:10Z" finished-at="2019-04-23T17:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872]" name="flowMapperTest" duration-ms="49317" started-at="2019-04-23T17:31:10Z" data-provider="getData" finished-at="2019-04-23T17:31:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{PARTNER=-, STEP10=, PRIORITY=P0, STEP02=RBLMoneyTransferTest_098, STEP13=, TCID=FlowMapper_393, STEP03=SettingsTest_007, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=RBLMoneyTransferTest_098, STEP07=SettingsTest_018, STEP04=LogoutTest_001, STEP05=LoginTest_001, RUNMODE=Yes, DESCRIPTION=Verify FCM when settings are submitted for verification, TESTTYPE=Positive, STEP08=LogoutTest_001, STEP09=, FEATURE=Settings}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@754ba872]" name="result" is-config="true" duration-ms="16" started-at="2019-04-23T17:31:59Z" finished-at="2019-04-23T17:31:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="killDriver()[pri:0, instance:tests.FlowMapper@754ba872]" name="killDriver" is-config="true" duration-ms="809" started-at="2019-04-23T17:31:59Z" finished-at="2019-04-23T17:32:00Z">
          <reporter-output>
            <line>
              <![CDATA[Shutdown the Web Application]]>
            </line>
          </reporter-output>
        </test-method> <!-- killDriver -->
      </class> <!-- tests.FlowMapper -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>

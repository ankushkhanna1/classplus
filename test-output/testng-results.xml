<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[Shutdown the Web Application]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="340817" started-at="2019-10-06T10:00:56Z" finished-at="2019-10-06T10:06:37Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="340817" started-at="2019-10-06T10:00:56Z" finished-at="2019-10-06T10:06:37Z">
      <class name="tests.FlowMapper">
        <test-method status="PASS" signature="generateIniFile()[pri:0, instance:tests.FlowMapper@53b32d7]" name="generateIniFile" is-config="true" duration-ms="19" started-at="2019-10-06T15:30:56Z" finished-at="2019-10-06T15:30:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateIniFile -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@53b32d7]" name="flowMapperTest" duration-ms="1987" started-at="2019-10-06T15:30:58Z" data-provider="getData" finished-at="2019-10-06T15:31:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{CONTRACT=-, STEP10=, PRIORITY=P, STEP02=, STEP13=, TCID=FlowMapper_000, STEP03=, STEP11=, STEP01=EnvTest_QA1, STEP12=, STEP06=, STEP07=, STEP04=, STEP05=, RUNMODE=Yes, WALLET=-, DESCRIPTION=Set environment to run test cases, TESTTYPE=no-check, STEP08=, STEP09=, FEATURE=-}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@53b32d7]" name="result" is-config="true" duration-ms="161" started-at="2019-10-06T15:31:00Z" finished-at="2019-10-06T15:31:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@53b32d7]" name="flowMapperTest" duration-ms="202558" started-at="2019-10-06T15:31:00Z" data-provider="getData" finished-at="2019-10-06T15:34:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{CONTRACT=RBL, STEP10=, PRIORITY=P2, STEP02=RBLMoneyTransferTest_032, STEP13=, TCID=FlowMapper_116, STEP03=RBLMoneyTransferTest_101, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=LogoutTest_001, STEP07=, STEP04=RBLMoneyTransferTest_033, STEP05=RBLStatusEnquiryTest_019, RUNMODE=Yes, WALLET=Main, DESCRIPTION=Status enquiry for a queued to success transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@53b32d7]" name="result" is-config="true" duration-ms="1049" started-at="2019-10-06T15:34:22Z" finished-at="2019-10-06T15:34:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=SUCCESS method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="FAIL" signature="flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@53b32d7]" name="flowMapperTest" duration-ms="131634" started-at="2019-10-06T15:34:24Z" data-provider="getData" finished-at="2019-10-06T15:36:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{CONTRACT=RBL, STEP10=, PRIORITY=P2, STEP02=RBLMoneyTransferTest_032, STEP13=, TCID=FlowMapper_116, STEP03=RBLMoneyTransferTest_101, STEP11=, STEP01=LoginTest_001, STEP12=, STEP06=LogoutTest_001, STEP07=, STEP04=RBLMoneyTransferTest_034, STEP05=RBLStatusEnquiryTest_020, RUNMODE=Yes, WALLET=Main, DESCRIPTION=Status enquiry for a queued to fail transaction, TESTTYPE=Positive, STEP08=, STEP09=, FEATURE=Money Transfer}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [70.00] but found [200.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [70.00] but found [200.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at in.novopay.platform_ui.pages.web.RBLStatusEnquiryPage.assertionOnTxnScreen(RBLStatusEnquiryPage.java:490)
	at in.novopay.platform_ui.pages.web.RBLStatusEnquiryPage.rBLStatusEnquiry(RBLStatusEnquiryPage.java:239)
	at tests.ui.RBLStatusEnquiryTest.rBLStatusEnquiryTest(RBLStatusEnquiryTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at tests.FlowMapper.flowMapperTest(FlowMapper.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flowMapperTest -->
        <test-method status="PASS" signature="result(org.testng.ITestResult)[pri:0, instance:tests.FlowMapper@53b32d7]" name="result" is-config="true" duration-ms="1435" started-at="2019-10-06T15:36:35Z" finished-at="2019-10-06T15:36:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flowMapperTest status=FAILURE method=FlowMapper.flowMapperTest(java.util.HashMap)[pri:0, instance:tests.FlowMapper@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- result -->
        <test-method status="PASS" signature="killDriver()[pri:0, instance:tests.FlowMapper@53b32d7]" name="killDriver" is-config="true" duration-ms="624" started-at="2019-10-06T15:36:37Z" finished-at="2019-10-06T15:36:37Z">
          <reporter-output>
            <line>
              <![CDATA[Shutdown the Web Application]]>
            </line>
          </reporter-output>
        </test-method> <!-- killDriver -->
      </class> <!-- tests.FlowMapper -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
